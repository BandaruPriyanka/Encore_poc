trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '18.x'
  displayName: 'Install Node.js'

- script: |
    cd '$(Build.SourcesDirectory)'
    npm install
  displayName: 'Install Dependencies'

- script: |
    cd '$(Build.SourcesDirectory)'
    npm install -D @playwright/test
    npx playwright install --with-deps
  displayName: 'Install Playwright with dependencies'

- script: |
    sudo apt-get update
    sudo apt-get install -y xvfb
  displayName: 'Install xvfb'

- script: |
    cd '$(Build.SourcesDirectory)'
    xvfb-run --auto-servernum --server-args='-screen 0 1280x960x24' npm run createdata1
  displayName: 'Create data 1'

- script: |
    cd '$(Build.SourcesDirectory)'
    xvfb-run --auto-servernum --server-args='-screen 0 1280x960x24' npm run createdata2
  displayName: 'Create data 2'

- script: |
    echo "Delaying for 17 minutes..."
    sleep 1020
  displayName: 'Delay 17 Minutes'

- script: |
    cd '$(Build.SourcesDirectory)'
    xvfb-run --auto-servernum --server-args='-screen 0 1280x960x24' npm run lighthouse_test
  displayName: 'Run Tests'
  continueOnError: true

- script: |
    cd '$(Build.SourcesDirectory)'
    npm run generate_reports
  displayName: 'Generate Reports'
  condition: always()

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.SourcesDirectory)/reports/ui/cucumber.html'
    artifactName: 'cucumber-report'
    publishLocation: 'pipeline'
  displayName: 'Publish Cucumber HTML Report'
  condition: always()

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.SourcesDirectory)/playwright-report'
    artifactName: 'playwright-report'
    publishLocation: 'pipeline'
  displayName: 'Publish Playwright Report'
  condition: always()